Below is the excerpt with -O2 option
------------------------------------
xorl %eax, %eax
ret

Below is the excerpt with -O2 -fsanitize=undefined option
---------------------------------------------------------
testovf:
	pushq	%rbp
	pushq	%rbx
	movabsq	$9223372036854775807, %rdx
	subq	$8, %rsp
	movq	big(%rip), %rbx
	movq	%rbx, %rbp
	addq	%rdx, %rbp
	jo	.L6
.L2:
	cmpq	%rbp, %rbx
	setg	%al
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret
.L6:
	movq	%rbx, %rsi
	movl	$.Lubsan_data0, %edi
	call	__ubsan_handle_add_overflow
	jmp	.L2

Below is the excerpt with -O2 -fwrapv option
--------------------------------------------
testovf:
	movq	big(%rip), %rdx
	movabsq	$9223372036854775807, %rax
	addq	%rdx, %rax
	cmpq	%rax, %rdx
	setg	%al
	ret

Differences:
With the -O2 option, the compiler will simply ignore the
overflow cases. As a result, without overflow, the result
should always return 0. This is reflected in its machine
code, which simply sets %eax to 0 and returns it.


